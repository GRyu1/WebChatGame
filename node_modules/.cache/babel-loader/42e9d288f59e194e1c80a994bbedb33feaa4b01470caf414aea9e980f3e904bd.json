{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGame = () => {\n  _s();\n  const [player, setPlayer] = useState({\n    type: 'JOIN',\n    name: 'Alice',\n    x: 0,\n    y: 0\n  });\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const socket = new SockJS('/game');\n    socket.onopen = () => {\n      console.log('GameServer Connecting');\n      const playerName = window.prompt(\"What's your name?\");\n      const newPlayer = {\n        ...player,\n        name: playerName\n      };\n      setPlayer(newPlayer);\n      setSocket(socket);\n      console.log(newPlayer);\n      socket.send(JSON.stringify(newPlayer));\n    };\n    socket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      if (message.type === 'POSITION') {\n        console.log(message);\n      }\n    };\n  }, []);\n\n  //스크립트 코드 쓰기.r\n  useEffect(() => {\n    if (socket) {\n      const handleKeyDown = debounce(e => {\n        const playerName = player.name;\n        switch (e.key) {\n          case 'ArrowRight':\n            const rightSignal = {\n              type: 'MOVE',\n              direction: 'right',\n              name: playerName\n            };\n            socket.send(JSON.stringify(rightSignal));\n            break;\n          case 'ArrowLeft':\n            const leftSignal = {\n              type: 'MOVE',\n              direction: 'left',\n              name: playerName\n            };\n            socket.send(JSON.stringify(leftSignal));\n            break;\n          case 'ArrowUp':\n            const upSignal = {\n              type: 'MOVE',\n              direction: 'up',\n              name: playerName\n            };\n            socket.send(JSON.stringify(upSignal));\n            break;\n          case 'ArrowDown':\n            const downSignal = {\n              type: 'MOVE',\n              direction: 'down',\n              name: playerName\n            };\n            socket.send(JSON.stringify(downSignal));\n            break;\n        }\n      }, 250);\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [socket, player]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGame, \"FlKQfWkFgQhkCZyN34Zl7loPlzM=\");\n_c = ChatGame;\nexport default ChatGame;\nvar _c;\n$RefreshReg$(_c, \"ChatGame\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","debounce","jsxDEV","_jsxDEV","ChatGame","_s","player","setPlayer","type","name","x","y","socket","setSocket","onopen","console","log","playerName","window","prompt","newPlayer","send","JSON","stringify","onmessage","event","message","parse","data","handleKeyDown","e","key","rightSignal","direction","leftSignal","upSignal","downSignal","document","addEventListener","removeEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { debounce } from \"lodash\";\r\n\r\n\r\nconst ChatGame = () => {\r\n    const [player, setPlayer] = useState({type:'JOIN', name: 'Alice', x: 0, y: 0 });\r\n    const [socket , setSocket] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS('/game');\r\n        socket.onopen = () => {\r\n            console.log('GameServer Connecting');\r\n            const playerName = window.prompt(\"What's your name?\");\r\n            const newPlayer = { ...player, name: playerName };\r\n            setPlayer(newPlayer);\r\n            setSocket(socket);\r\n            console.log(newPlayer);\r\n            socket.send(JSON.stringify(newPlayer));\r\n        };\r\n        socket.onmessage = (event) => {\r\n            const message = JSON.parse(event.data);\r\n            if (message.type === 'POSITION') {\r\n                console.log(message);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    //스크립트 코드 쓰기.r\r\n    useEffect(() => {\r\n        if (socket) {\r\n          const handleKeyDown = debounce((e) => {\r\n            const playerName = player.name;\r\n            switch (e.key) {\r\n              case 'ArrowRight':\r\n                const rightSignal = { type: 'MOVE', direction: 'right', name: playerName };\r\n                socket.send(JSON.stringify(rightSignal));\r\n                break;\r\n      \r\n              case 'ArrowLeft':\r\n                const leftSignal = { type: 'MOVE', direction: 'left', name: playerName };\r\n                socket.send(JSON.stringify(leftSignal));\r\n                break;\r\n      \r\n              case 'ArrowUp':\r\n                const upSignal = { type: 'MOVE', direction: 'up', name: playerName };\r\n                socket.send(JSON.stringify(upSignal));\r\n                break;\r\n      \r\n              case 'ArrowDown':\r\n                const downSignal = { type: 'MOVE', direction: 'down', name: playerName };\r\n                socket.send(JSON.stringify(downSignal));\r\n                break;\r\n            }\r\n          }, 250);\r\n      \r\n          document.addEventListener('keydown', handleKeyDown);\r\n      \r\n          return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n          };\r\n        }\r\n      }, [socket, player]);\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <h1>game</h1>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}