{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGame = () => {\n  _s();\n  const [playerName, setPlayerName] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  useEffect(() => {\n    const playerName = window.prompt(\"What's your name?\");\n    setPlayerName(playerName);\n    localStorage.setItem(\"login\", true);\n    const socket = new SockJS('/game');\n    socket.onopen = () => {\n      setPlayers(prevPlayers => [...prevPlayers, {\n        name: playerName,\n        x: 0,\n        y: 0,\n        color: getRandomColor()\n      }]);\n      setSocket(socket);\n      console.log('GameServer Connecting');\n    };\n    socket.onmessage = event => {\n      console.log(event);\n    };\n\n    // Clean up the socket on unmount\n    return () => {\n      socket.close();\n    };\n    return () => {\n      socket.close();\n    };\n  }, []);\n  if (!socket) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  const handleKeyDown = debounce(e => {\n    switch (e.key) {\n      case 'ArrowRight':\n        const rightSignal = {\n          type: 'MOVE',\n          direction: 'right',\n          name: playerName\n        };\n        socket.send(JSON.stringify(rightSignal));\n        break;\n      case 'ArrowLeft':\n        const leftSignal = {\n          type: 'MOVE',\n          direction: 'left',\n          name: playerName\n        };\n        socket.send(JSON.stringify(leftSignal));\n        break;\n      case 'ArrowUp':\n        const upSignal = {\n          type: 'MOVE',\n          direction: 'up',\n          name: playerName\n        };\n        socket.send(JSON.stringify(upSignal));\n        break;\n      case 'ArrowDown':\n        const downSignal = {\n          type: 'MOVE',\n          direction: 'down',\n          name: playerName\n        };\n        socket.send(JSON.stringify(downSignal));\n        break;\n    }\n  }, 100);\n  document.addEventListener('keydown', handleKeyDown);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: playerName ? playerName : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), players.map(playerInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        backgroundColor: \"black\",\n        // Generate a random color for each box\n        position: \"absolute\",\n        transition: \"left 0.3s, top 0.3s\",\n        left: `${600 - playerInfo.x * 50}px`,\n        top: `${600 - playerInfo.y * 50}px`\n      },\n      children: playerInfo.name\n    }, playerInfo.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGame, \"HcadwQHpnZBfy+kk0Pr/MOSG66U=\");\n_c = ChatGame;\nexport default _c2 = /*#__PURE__*/React.memo(ChatGame);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatGame\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","debounce","jsxDEV","_jsxDEV","ChatGame","_s","playerName","setPlayerName","socket","setSocket","players","setPlayers","getRandomColor","letters","color","i","Math","floor","random","window","prompt","localStorage","setItem","onopen","prevPlayers","name","x","y","console","log","onmessage","event","close","children","fileName","_jsxFileName","lineNumber","columnNumber","handleKeyDown","e","key","rightSignal","type","direction","send","JSON","stringify","leftSignal","upSignal","downSignal","document","addEventListener","id","map","playerInfo","style","width","height","backgroundColor","position","transition","left","top","_c","_c2","memo","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { debounce } from \"lodash\";\r\n\r\n\r\nconst ChatGame = () => {\r\n    const [playerName, setPlayerName] = useState(null);\r\n    const [socket , setSocket] = useState(null);\r\n    const [players , setPlayers] = useState([]);\r\n\r\n    const getRandomColor = () => {\r\n        const letters = \"0123456789ABCDEF\";\r\n        let color = \"#\";\r\n        for (let i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      };\r\n    \r\n      useEffect(() => {\r\n        const playerName = window.prompt(\"What's your name?\");\r\n        setPlayerName(playerName);\r\n        localStorage.setItem(\"login\", true);\r\n        const socket = new SockJS('/game');\r\n        socket.onopen = () => {\r\n          setPlayers(prevPlayers => [...prevPlayers, { name: playerName, x: 0, y: 0, color: getRandomColor() }]);\r\n          setSocket(socket);\r\n          console.log('GameServer Connecting');\r\n        };\r\n    \r\n        socket.onmessage = (event) => {\r\n          console.log(event);\r\n        };\r\n    \r\n        // Clean up the socket on unmount\r\n        return () => {\r\n          socket.close();\r\n        };\r\n        return () => {\r\n          socket.close();\r\n        }\r\n      }, []);\r\n\r\n      if (!socket) {\r\n        return <div>Loading...</div>;\r\n      }\r\n    \r\n    const handleKeyDown = debounce((e) => {\r\n      switch (e.key) {\r\n        case 'ArrowRight':\r\n          const rightSignal = { type: 'MOVE', direction: 'right', name: playerName };\r\n          socket.send(JSON.stringify(rightSignal));\r\n          break;\r\n  \r\n        case 'ArrowLeft':\r\n          const leftSignal = { type: 'MOVE', direction: 'left', name: playerName };\r\n          socket.send(JSON.stringify(leftSignal));\r\n          break;\r\n  \r\n        case 'ArrowUp':\r\n          const upSignal = { type: 'MOVE', direction: 'up', name: playerName };\r\n          socket.send(JSON.stringify(upSignal));\r\n          break;\r\n  \r\n        case 'ArrowDown':\r\n          const downSignal = { type: 'MOVE', direction: 'down', name: playerName };\r\n          socket.send(JSON.stringify(downSignal));\r\n          break;\r\n      }\r\n    }, 100);\r\n    document.addEventListener('keydown', handleKeyDown);\r\n      \r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <h1>{playerName? playerName : \"\"}</h1>\r\n            {players.map((playerInfo) => (\r\n                <div\r\n                key={playerInfo.name}\r\n                style={{\r\n                    width: \"100px\",\r\n                    height: \"100px\",\r\n                    backgroundColor: \"black\", // Generate a random color for each box\r\n                    position: \"absolute\",\r\n                    transition: \"left 0.3s, top 0.3s\",\r\n                    left: `${600 - playerInfo.x * 50}px`,\r\n                    top: `${600 - playerInfo.y * 50}px`,\r\n                }}\r\n                >\r\n                {playerInfo.name}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(ChatGame);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}