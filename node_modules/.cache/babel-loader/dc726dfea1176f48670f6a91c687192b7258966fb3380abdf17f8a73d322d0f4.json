{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGame = () => {\n  _s();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  useEffect(() => {\n    const playerName = window.prompt(\"What's your name?\");\n    setPlayerName(playerName);\n    const socket = new SockJS('/game');\n    socket.onopen = () => {\n      const newPlayers = [...players, {\n        name: playerName,\n        x: 0,\n        y: 0,\n        color: `${getRandomColor()}`\n      }];\n      setPlayers(newPlayers);\n      console.log(newPlayers);\n      setSocket(socket);\n      console.log('GameServer Connecting');\n    };\n    socket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      console.log(event);\n    };\n  }, []);\n\n  //스크립트 코드 쓰기.\n  useEffect(() => {\n    if (socket) {\n      const handleKeyDown = debounce(e => {\n        switch (e.key) {\n          case 'ArrowRight':\n            const rightSignal = {\n              type: 'MOVE',\n              direction: 'right',\n              name: playerName\n            };\n            socket.send(JSON.stringify(rightSignal));\n            break;\n          case 'ArrowLeft':\n            const leftSignal = {\n              type: 'MOVE',\n              direction: 'left',\n              name: playerName\n            };\n            socket.send(JSON.stringify(leftSignal));\n            break;\n          case 'ArrowUp':\n            const upSignal = {\n              type: 'MOVE',\n              direction: 'up',\n              name: playerName\n            };\n            socket.send(JSON.stringify(upSignal));\n            break;\n          case 'ArrowDown':\n            const downSignal = {\n              type: 'MOVE',\n              direction: 'down',\n              name: playerName\n            };\n            socket.send(JSON.stringify(downSignal));\n            break;\n        }\n      }, 100);\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: playerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), players.map(playerInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        backgroundColor: \"black\",\n        // Generate a random color for each box\n        position: \"absolute\",\n        transition: \"left 0.3s, top 0.3s\",\n        left: `${600 - playerInfo.x * 50}px`,\n        top: `${600 - playerInfo.y * 50}px`\n      },\n      children: playerInfo.name\n    }, playerInfo.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGame, \"rbqUAjdzaGYx8Y8nlWa5c+oAyi8=\");\n_c = ChatGame;\nexport default ChatGame;\nvar _c;\n$RefreshReg$(_c, \"ChatGame\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","debounce","jsxDEV","_jsxDEV","ChatGame","_s","playerName","setPlayerName","socket","setSocket","players","setPlayers","getRandomColor","letters","color","i","Math","floor","random","window","prompt","onopen","newPlayers","name","x","y","console","log","onmessage","event","message","JSON","parse","data","handleKeyDown","e","key","rightSignal","type","direction","send","stringify","leftSignal","upSignal","downSignal","document","addEventListener","removeEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playerInfo","style","width","height","backgroundColor","position","transition","left","top","_c","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { debounce } from \"lodash\";\r\n\r\n\r\nconst ChatGame = () => {\r\n    const [playerName, setPlayerName] = useState(\"\");\r\n    const [socket , setSocket] = useState(null);\r\n    const [players , setPlayers] = useState([]);\r\n\r\n    const getRandomColor = () => {\r\n        const letters = \"0123456789ABCDEF\";\r\n        let color = \"#\";\r\n        for (let i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n      const playerName = window.prompt(\"What's your name?\");\r\n      setPlayerName(playerName)\r\n    \r\n      const socket = new SockJS('/game');\r\n      socket.onopen = () => {\r\n          const newPlayers = [...players, {name : playerName , x:0 , y:0 , color : `${getRandomColor()}`}]\r\n          setPlayers(newPlayers);\r\n\r\n          console.log(newPlayers)\r\n          \r\n          setSocket(socket);\r\n          console.log('GameServer Connecting');\r\n      };\r\n      socket.onmessage = (event) => {\r\n          const message = JSON.parse(event.data);\r\n          console.log(event)\r\n      };\r\n    }, []);\r\n\r\n    //스크립트 코드 쓰기.\r\n    useEffect(() => {\r\n        if (socket) {\r\n          const handleKeyDown = debounce((e) => {\r\n            switch (e.key) {\r\n              case 'ArrowRight':\r\n                const rightSignal = { type: 'MOVE', direction: 'right', name: playerName };\r\n                socket.send(JSON.stringify(rightSignal));\r\n                break;\r\n      \r\n              case 'ArrowLeft':\r\n                const leftSignal = { type: 'MOVE', direction: 'left', name: playerName };\r\n                socket.send(JSON.stringify(leftSignal));\r\n                break;\r\n      \r\n              case 'ArrowUp':\r\n                const upSignal = { type: 'MOVE', direction: 'up', name: playerName };\r\n                socket.send(JSON.stringify(upSignal));\r\n                break;\r\n      \r\n              case 'ArrowDown':\r\n                const downSignal = { type: 'MOVE', direction: 'down', name: playerName };\r\n                socket.send(JSON.stringify(downSignal));\r\n                break;\r\n            }\r\n          }, 100);\r\n      \r\n          document.addEventListener('keydown', handleKeyDown);\r\n      \r\n          return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n          };\r\n        }\r\n      }, [socket]);\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <h1>{playerName}</h1>\r\n            {players.map((playerInfo) => (\r\n                <div\r\n                key={playerInfo.name}\r\n                style={{\r\n                    width: \"100px\",\r\n                    height: \"100px\",\r\n                    backgroundColor: \"black\", // Generate a random color for each box\r\n                    position: \"absolute\",\r\n                    transition: \"left 0.3s, top 0.3s\",\r\n                    left: `${600 - playerInfo.x * 50}px`,\r\n                    top: `${600 - playerInfo.y * 50}px`,\r\n                }}\r\n                >\r\n                {playerInfo.name}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}