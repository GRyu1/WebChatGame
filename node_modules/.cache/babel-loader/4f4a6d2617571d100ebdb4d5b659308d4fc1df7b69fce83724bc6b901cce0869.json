{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGame = () => {\n  _s();\n  const [player, setPlayer] = useState({\n    type: 'JOIN',\n    name: 'Alice',\n    x: 0,\n    y: 0\n  });\n  const [socket, setSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  const boxStyle = {\n    width: \"100px\",\n    height: \"100px\",\n    backgroundColor: getRandomColor(),\n    position: \"absolute\"\n  };\n  useEffect(() => {\n    const socket = new SockJS('/game');\n    socket.onopen = () => {\n      console.log('GameServer Connecting');\n      const playerName = window.prompt(\"What's your name?\");\n      const newPlayer = {\n        ...player,\n        name: playerName\n      };\n      const newPlayers = [...players, {\n        name: newPlayer.name,\n        x: 0,\n        y: 0\n      }];\n      setPlayers(newPlayers);\n      setPlayer(newPlayer);\n      setSocket(socket);\n      console.log(newPlayer);\n      socket.send(JSON.stringify(newPlayer));\n    };\n    socket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      if (message.type === 'POSITION') {\n        const {\n          name,\n          x,\n          y\n        } = message;\n        const playerIndex = players.findIndex(p => p.name === name);\n        if (playerIndex !== -1) {\n          const newPlayers = [...players];\n          newPlayers[playerIndex] = [...{\n            name,\n            x,\n            y\n          }];\n          setPlayers(newPlayers);\n        } else {\n          const newPlayers = [...players, {\n            name,\n            x,\n            y\n          }];\n          setPlayers(newPlayers);\n        }\n      }\n      console.log(players);\n    };\n  }, []);\n\n  //스크립트 코드 쓰기.\n  useEffect(() => {\n    if (socket) {\n      const handleKeyDown = debounce(e => {\n        const playerName = player.name;\n        switch (e.key) {\n          case 'ArrowRight':\n            const rightSignal = {\n              type: 'MOVE',\n              direction: 'right',\n              name: playerName\n            };\n            socket.send(JSON.stringify(rightSignal));\n            break;\n          case 'ArrowLeft':\n            const leftSignal = {\n              type: 'MOVE',\n              direction: 'left',\n              name: playerName\n            };\n            socket.send(JSON.stringify(leftSignal));\n            break;\n          case 'ArrowUp':\n            const upSignal = {\n              type: 'MOVE',\n              direction: 'up',\n              name: playerName\n            };\n            socket.send(JSON.stringify(upSignal));\n            break;\n          case 'ArrowDown':\n            const downSignal = {\n              type: 'MOVE',\n              direction: 'down',\n              name: playerName\n            };\n            socket.send(JSON.stringify(downSignal));\n            break;\n        }\n      }, 10);\n      document.addEventListener('keydown', handleKeyDown);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [socket, player]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), players.map(playerInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...boxStyle,\n        left: `${600 - playerInfo.x * 5}px`,\n        top: `${600 - playerInfo.y * 5}px`\n      },\n      children: playerInfo.name\n    }, playerInfo.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatGame, \"b4LxmellP+Qybx1JVzm4Ll/38N0=\");\n_c = ChatGame;\nexport default ChatGame;\nvar _c;\n$RefreshReg$(_c, \"ChatGame\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","debounce","jsxDEV","_jsxDEV","ChatGame","_s","player","setPlayer","type","name","x","y","socket","setSocket","players","setPlayers","getRandomColor","letters","color","i","Math","floor","random","boxStyle","width","height","backgroundColor","position","onopen","console","log","playerName","window","prompt","newPlayer","newPlayers","send","JSON","stringify","onmessage","event","message","parse","data","playerIndex","findIndex","p","handleKeyDown","e","key","rightSignal","direction","leftSignal","upSignal","downSignal","document","addEventListener","removeEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playerInfo","style","left","top","_c","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { debounce } from \"lodash\";\r\n\r\n\r\nconst ChatGame = () => {\r\n    const [player, setPlayer] = useState({type:'JOIN', name: 'Alice', x: 0, y: 0 });\r\n    const [socket , setSocket] = useState(null);\r\n    const [players , setPlayers] = useState([]);\r\n\r\n    const getRandomColor = () => {\r\n        const letters = \"0123456789ABCDEF\";\r\n        let color = \"#\";\r\n        for (let i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n      };\r\n      \r\n      const boxStyle = {\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        backgroundColor: getRandomColor(),\r\n        position: \"absolute\",\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = new SockJS('/game');\r\n        socket.onopen = () => {\r\n            console.log('GameServer Connecting');\r\n            const playerName = window.prompt(\"What's your name?\");\r\n            const newPlayer = { ...player, name: playerName };\r\n            const newPlayers = [...players, {name : newPlayer.name , x:0 , y:0 }]\r\n            setPlayers(newPlayers)\r\n            setPlayer(newPlayer);\r\n            setSocket(socket);\r\n            console.log(newPlayer);\r\n            socket.send(JSON.stringify(newPlayer));\r\n        };\r\n        socket.onmessage = (event) => {\r\n            const message = JSON.parse(event.data);\r\n            if (message.type === 'POSITION') {\r\n                const {name , x, y } = message\r\n                const playerIndex = players.findIndex((p) => p.name === name);\r\n                if (playerIndex !== -1) {\r\n                  const newPlayers = [...players];\r\n                  newPlayers[playerIndex] = [...{ name, x, y }];\r\n                  setPlayers(newPlayers);\r\n                } else {\r\n                  const newPlayers = [...players, { name, x, y }];\r\n                  setPlayers(newPlayers);\r\n                }\r\n            }\r\n            console.log(players)\r\n        };\r\n    }, []);\r\n\r\n    //스크립트 코드 쓰기.\r\n    useEffect(() => {\r\n        if (socket) {\r\n          const handleKeyDown = debounce((e) => {\r\n            const playerName = player.name;\r\n            switch (e.key) {\r\n              case 'ArrowRight':\r\n                const rightSignal = { type: 'MOVE', direction: 'right', name: playerName };\r\n                socket.send(JSON.stringify(rightSignal));\r\n                break;\r\n      \r\n              case 'ArrowLeft':\r\n                const leftSignal = { type: 'MOVE', direction: 'left', name: playerName };\r\n                socket.send(JSON.stringify(leftSignal));\r\n                break;\r\n      \r\n              case 'ArrowUp':\r\n                const upSignal = { type: 'MOVE', direction: 'up', name: playerName };\r\n                socket.send(JSON.stringify(upSignal));\r\n                break;\r\n      \r\n              case 'ArrowDown':\r\n                const downSignal = { type: 'MOVE', direction: 'down', name: playerName };\r\n                socket.send(JSON.stringify(downSignal));\r\n                break;\r\n            }\r\n          }, 10);\r\n      \r\n          document.addEventListener('keydown', handleKeyDown);\r\n      \r\n          return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n          };\r\n        }\r\n      }, [socket, player]);\r\n\r\n    return (\r\n        <div id=\"board\">\r\n            <h1>game</h1>\r\n\r\n            {players.map((playerInfo) => (\r\n                <div key={playerInfo.name} style={{ ...boxStyle, left: `${600-playerInfo.x*5}px`, top: `${600-playerInfo.y*5}px` }}>\r\n                {playerInfo.name}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}