[{"C:\\workspace\\webChat\\front\\src\\index.js":"1","C:\\workspace\\webChat\\front\\src\\App.js":"2","C:\\workspace\\webChat\\front\\src\\reportWebVitals.js":"3","C:\\workspace\\webChat\\front\\src\\component\\hello.jsx":"4","C:\\workspace\\webChat\\front\\src\\component\\chat.jsx":"5","C:\\workspace\\webChat\\front\\src\\component\\ChatSockjs.jsx":"6","C:\\workspace\\webChat\\front\\src\\component\\ChatGame.jsx":"7"},{"size":578,"mtime":1690200292519,"results":"8","hashOfConfig":"9"},{"size":643,"mtime":1690166938941,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1690093399800,"results":"11","hashOfConfig":"9"},{"size":564,"mtime":1690164610267,"results":"12","hashOfConfig":"9"},{"size":3475,"mtime":1690130954258,"results":"13","hashOfConfig":"9"},{"size":1475,"mtime":1690159369937,"results":"14","hashOfConfig":"9"},{"size":3874,"mtime":1690216458152,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"m4psv2",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\webChat\\front\\src\\index.js",["41"],[],"C:\\workspace\\webChat\\front\\src\\App.js",["42"],[],"import logo from './logo.svg';\nimport './App.css';\nimport ChatGame from './component/ChatGame';\nimport { useEffect } from 'react';\n\nfunction App() {\n  \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <ChatGame></ChatGame>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",[],"C:\\workspace\\webChat\\front\\src\\reportWebVitals.js",[],[],"C:\\workspace\\webChat\\front\\src\\component\\hello.jsx",[],[],"C:\\workspace\\webChat\\front\\src\\component\\chat.jsx",["43","44","45"],[],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\n\r\nconst ChatApp = () =>{\r\n    const [msg , setMsg ] = useState(\"\");\r\n    const [name , setName] = useState(\"\");\r\n    const [chatt , setChatt ] = useState([]);\r\n    const [chkLog , setChkLog ] = useState(false);\r\n    const [socketData , setSocketData] = useState();\r\n\r\n    const ws = useRef(null);\r\n\r\n    const msgBox = chatt.map((item, idx) => (\r\n        <div key={idx} className={item.name === name ? 'me' : 'other'}>\r\n            <span><b>{item.name}</b></span> [{item.data}]<br/>\r\n            <span>{item.msg}</span>\r\n        </div>\r\n    ));\r\n\r\n    useEffect(()=>{\r\n        if(socketData !== undefined){\r\n            const tempData = chatt.concat(socketData);\r\n            console.log(tempData);\r\n            setChatt(tempData);\r\n        }\r\n    },[socketData]);\r\n\r\n    const GlobalStyle = createGlobalStyle`${reset}`;\r\n    const onText = (event) => {\r\n        console.log(event.target.value)\r\n        setMsg(event.target.value)\r\n    }\r\n    const WebSocketLogin = useCallback(() => {\r\n        ws.current = new WebSocket(\"ws://localhost:8080/socket/chatt\");\r\n\r\n        ws.current.onmessage = (message) => {\r\n            const dataSet = JSON.parse(message.data);\r\n            setSocketData(dataSet);\r\n        }\r\n    });\r\n\r\n    const send = useCallback(()=> {\r\n        if(!chkLog){\r\n            if(name===\"\"){\r\n                alert(\"이름을 입력하세요.\");\r\n                document.getElementById(\"name\").focus();\r\n                return;\r\n            }\r\n            WebSocketLogin();\r\n            setChkLog(true);\r\n        }\r\n        if(msg !== ''){\r\n            const data = {\r\n                name,\r\n                msg,\r\n                data: new Date().toLocaleDateString(),\r\n            };\r\n            const temp = JSON.stringify(data);\r\n            if(ws.current.readyState === 0){\r\n                ws.current.onopen = () => {\r\n                    console.log(ws.current.readyState);\r\n                    ws.current.send(temp);\r\n                }\r\n            }\r\n            else{\r\n                ws.current.send(temp);\r\n            }\r\n        }else{\r\n            alert(\"메세지를 입력하세요.\")\r\n            document.getElementById(\"msg\").focus();\r\n        }\r\n        setMsg(\"\");\r\n    })\r\n    return (\r\n        <>\r\n            <GlobalStyle/>\r\n            <div id=\"chat-wrap\">\r\n                <div id='chatt'>\r\n                    <h1 id=\"title\">WebSocket Chatting</h1>\r\n                    <br/>\r\n                    <div id='talk'>\r\n                        <div className='talk-shadow'></div>\r\n                        {msgBox}\r\n                    </div>\r\n                    <input disabled={chkLog}\r\n                        placeholder='이름을 입력하세요.' \r\n                        type='text' \r\n                        id='name' \r\n                        value={name} \r\n                        onChange={(event => setName(event.target.value))}/>\r\n                    <div id='sendZone'>\r\n                        <textarea id='msg' value={msg} onChange={onText}\r\n                            onKeyDown={(ev) => {if(ev.keyCode === 13){send();}}}></textarea>\r\n                        <input type='button' value='전송' id='btnSend' onClick={send}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ChatApp;",[],"C:\\workspace\\webChat\\front\\src\\component\\ChatSockjs.jsx",["46"],[],"C:\\workspace\\webChat\\front\\src\\component\\ChatGame.jsx",["47","48"],[],{"ruleId":"49","severity":1,"message":"50","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":28,"column":7,"nodeType":"56","endLine":28,"endColumn":19,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":35,"column":28,"nodeType":"51","endLine":35,"endColumn":39},{"ruleId":"54","severity":1,"message":"58","line":44,"column":18,"nodeType":"51","endLine":44,"endColumn":29},{"ruleId":"49","severity":1,"message":"59","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":16},{"ruleId":"49","severity":1,"message":"60","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":47,"column":6,"nodeType":"56","endLine":47,"endColumn":8,"suggestions":"62"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chatt'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'socket' is assigned a value but never used.","'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'positions'. Either include it or remove the dependency array.",["64"],{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [chatt, socketData]",{"range":"69","text":"70"},"Update the dependencies array to be: [positions]",{"range":"71","text":"72"},[917,929],"[chatt, socketData]",[1380,1382],"[positions]"]