{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatGame = () => {\n  _s();\n  const [playerName, setPlayerName] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  useEffect(() => {\n    if (!playerName) {\n      const playerName = window.prompt(\"What's your name?\");\n      setPlayerName(playerName);\n      localStorage.setItem(\"login\", true);\n    }\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  useEffect(() => {\n    if (playerName) {\n      const socket = new SockJS(\"/game\");\n      socket.onopen = () => {\n        setPlayers(prevPlayers => [...prevPlayers, {\n          name: playerName,\n          x: 0,\n          y: 0,\n          color: getRandomColor()\n        }]);\n        setSocket(socket);\n        console.log(\"GameServer Connecting\");\n      };\n      socket.onmessage = event => {\n        console.log(event);\n      };\n\n      // Clean up the socket on unmount\n      return () => {\n        socket.close();\n      };\n    }\n  }, [playerName]);\n  useEffect(() => {\n    const handleKeyDown = debounce(e => {\n      switch (e.key) {\n        case \"ArrowRight\":\n          const rightSignal = {\n            type: \"MOVE\",\n            direction: \"right\",\n            name: playerName\n          };\n          socket.send(JSON.stringify(rightSignal));\n          break;\n        case \"ArrowLeft\":\n          const leftSignal = {\n            type: \"MOVE\",\n            direction: \"left\",\n            name: playerName\n          };\n          socket.send(JSON.stringify(leftSignal));\n          break;\n        case \"ArrowUp\":\n          const upSignal = {\n            type: \"MOVE\",\n            direction: \"up\",\n            name: playerName\n          };\n          socket.send(JSON.stringify(upSignal));\n          break;\n        case \"ArrowDown\":\n          const downSignal = {\n            type: \"MOVE\",\n            direction: \"down\",\n            name: playerName\n          };\n          socket.send(JSON.stringify(downSignal));\n          break;\n        default:\n          break;\n      }\n    }, 100);\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Clean up the event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [socket, playerName]);\n  if (!socket) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: playerName ? playerName : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), players.map(playerInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100px\",\n        height: \"100px\",\n        backgroundColor: playerInfo.color,\n        position: \"absolute\",\n        transition: \"left 0.3s, top 0.3s\",\n        left: `${600 - playerInfo.x * 50}px`,\n        top: `${600 - playerInfo.y * 50}px`\n      },\n      children: playerInfo.name\n    }, playerInfo.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatGame, \"41I28qsIxm0WVjo5ztnu97sCaFc=\");\n_c = ChatGame;\nexport default _c2 = /*#__PURE__*/React.memo(ChatGame);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatGame\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","SockJS","debounce","jsxDEV","_jsxDEV","ChatGame","_s","playerName","setPlayerName","socket","setSocket","players","setPlayers","getRandomColor","letters","color","i","Math","floor","random","window","prompt","localStorage","setItem","onopen","prevPlayers","name","x","y","console","log","onmessage","event","close","handleKeyDown","e","key","rightSignal","type","direction","send","JSON","stringify","leftSignal","upSignal","downSignal","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","playerInfo","style","width","height","backgroundColor","position","transition","left","top","_c","_c2","memo","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatGame.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst ChatGame = () => {\r\n  const [playerName, setPlayerName] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const getRandomColor = () => {\r\n    const letters = \"0123456789ABCDEF\";\r\n    let color = \"#\";\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    if (!playerName) {\r\n      const playerName = window.prompt(\"What's your name?\");\r\n      setPlayerName(playerName);\r\n      localStorage.setItem(\"login\", true);\r\n    }\r\n  }, []); // Empty dependency array to run the effect only once on mount\r\n\r\n  useEffect(() => {\r\n    if (playerName) {\r\n      const socket = new SockJS(\"/game\");\r\n      socket.onopen = () => {\r\n        setPlayers((prevPlayers) => [\r\n          ...prevPlayers,\r\n          { name: playerName, x: 0, y: 0, color: getRandomColor() },\r\n        ]);\r\n        setSocket(socket);\r\n        console.log(\"GameServer Connecting\");\r\n      };\r\n\r\n      socket.onmessage = (event) => {\r\n        console.log(event);\r\n      };\r\n\r\n      // Clean up the socket on unmount\r\n      return () => {\r\n        socket.close();\r\n      };\r\n    }\r\n  }, [playerName]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = debounce((e) => {\r\n      switch (e.key) {\r\n        case \"ArrowRight\":\r\n          const rightSignal = { type: \"MOVE\", direction: \"right\", name: playerName };\r\n          socket.send(JSON.stringify(rightSignal));\r\n          break;\r\n\r\n        case \"ArrowLeft\":\r\n          const leftSignal = { type: \"MOVE\", direction: \"left\", name: playerName };\r\n          socket.send(JSON.stringify(leftSignal));\r\n          break;\r\n\r\n        case \"ArrowUp\":\r\n          const upSignal = { type: \"MOVE\", direction: \"up\", name: playerName };\r\n          socket.send(JSON.stringify(upSignal));\r\n          break;\r\n\r\n        case \"ArrowDown\":\r\n          const downSignal = { type: \"MOVE\", direction: \"down\", name: playerName };\r\n          socket.send(JSON.stringify(downSignal));\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }, 100);\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    // Clean up the event listener on unmount\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n      if (socket) {\r\n        socket.close();\r\n      }\r\n    };\r\n  }, [socket, playerName]);\r\n\r\n  if (!socket) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"board\">\r\n      <h1>{playerName ? playerName : \"\"}</h1>\r\n      {players.map((playerInfo) => (\r\n        <div\r\n          key={playerInfo.name}\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            backgroundColor: playerInfo.color,\r\n            position: \"absolute\",\r\n            transition: \"left 0.3s, top 0.3s\",\r\n            left: `${600 - playerInfo.x * 50}px`,\r\n            top: `${600 - playerInfo.y * 50}px`,\r\n          }}\r\n        >\r\n          {playerInfo.name}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChatGame);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}