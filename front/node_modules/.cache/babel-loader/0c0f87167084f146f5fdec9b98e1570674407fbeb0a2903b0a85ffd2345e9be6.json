{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\webChat\\\\front\\\\src\\\\component\\\\ChatSockjs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport { Client } from '@stomp/stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [client, setClient] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const socket = new SockJS('/ws');\n    const clientSockJS = new Client({\n      webSocketFactory: () => socket,\n      debug: str => console.log(str),\n      onConnect: () => console.log('connected'),\n      onDisconnect: () => console.log('disconnected')\n    }); // 연결\n\n    clientSockJS.onStompError = frame => {\n      console.log('Broker reported error: ' + frame.headers['message']);\n      console.log('Additional details: ' + frame.body);\n    };\n    clientSockJS.activate();\n    setClient(clientSockJS);\n    setSocket(socket);\n  }, []); // 클라이언트 실행 , 저장\n\n  const sendMessage = () => {\n    const chatMessage = {\n      sender: \"name\",\n      content: message,\n      type: 'CHAT'\n    }; // ChatDto 와 같은 구조의 JSON\n    client.publish({\n      destination: '/app/chat',\n      body: JSON.stringify(chatMessage)\n    });\n    setMessage('');\n    console.log('end');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => {\n        setMessage(e.target.value);\n        console.log(message);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"nYNneRjjpitP6nQ9vHz1CkHlIZ0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","SockJS","Client","jsxDEV","_jsxDEV","Chat","_s","client","setClient","message","setMessage","socket","setSocket","clientSockJS","webSocketFactory","debug","str","console","log","onConnect","onDisconnect","onStompError","frame","headers","body","activate","sendMessage","chatMessage","sender","content","type","publish","destination","JSON","stringify","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/workspace/webChat/front/src/component/ChatSockjs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport { Client } from '@stomp/stompjs';\r\n\r\nfunction Chat() {\r\n  const [client, setClient] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [socket , setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = new SockJS('/ws');\r\n    const clientSockJS = new Client({\r\n      webSocketFactory: () => socket,\r\n      debug: (str) => console.log(str),\r\n      onConnect: () => console.log('connected'),\r\n      onDisconnect: () => console.log('disconnected')\r\n    });   // 연결\r\n\r\n    clientSockJS.onStompError = (frame) => {\r\n      console.log('Broker reported error: ' + frame.headers['message']);\r\n      console.log('Additional details: ' + frame.body);\r\n    };\r\n\r\n    clientSockJS.activate();\r\n    setClient(clientSockJS);\r\n    setSocket(socket);\r\n  }, []); // 클라이언트 실행 , 저장\r\n\r\n  const sendMessage = () => {\r\n    \r\n    const chatMessage = { sender: \"name\", content: message, type: 'CHAT' }; // ChatDto 와 같은 구조의 JSON\r\n    client.publish({ destination: '/app/chat', body: JSON.stringify(chatMessage) });\r\n    \r\n    setMessage('');\r\n    console.log('end');\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={message} onChange={(e) =>{\r\n        setMessage(e.target.value);\r\n        console.log(message);}}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAGC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAG,IAAIV,MAAM,CAAC,KAAK,CAAC;IAChC,MAAMY,YAAY,GAAG,IAAIX,MAAM,CAAC;MAC9BY,gBAAgB,EAAEA,CAAA,KAAMH,MAAM;MAC9BI,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChCG,SAAS,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACzCE,YAAY,EAAEA,CAAA,KAAMH,OAAO,CAACC,GAAG,CAAC,cAAc;IAChD,CAAC,CAAC,CAAC,CAAG;;IAENL,YAAY,CAACQ,YAAY,GAAIC,KAAK,IAAK;MACrCL,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGI,KAAK,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;MACjEN,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGI,KAAK,CAACE,IAAI,CAAC;IAClD,CAAC;IAEDX,YAAY,CAACY,QAAQ,CAAC,CAAC;IACvBjB,SAAS,CAACK,YAAY,CAAC;IACvBD,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMe,WAAW,GAAGA,CAAA,KAAM;IAExB,MAAMC,WAAW,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAEpB,OAAO;MAAEqB,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IACxEvB,MAAM,CAACwB,OAAO,CAAC;MAAEC,WAAW,EAAE,WAAW;MAAER,IAAI,EAAES,IAAI,CAACC,SAAS,CAACP,WAAW;IAAE,CAAC,CAAC;IAE/EjB,UAAU,CAAC,EAAE,CAAC;IACdO,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EACtB,CAAC;EAEC,oBACEd,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACM,KAAK,EAAE3B,OAAQ;MAAC4B,QAAQ,EAAGC,CAAC,IAAI;QACjD5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAC1BnB,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;MAAC;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvC,OAAA;MAAQwC,OAAO,EAAElB,WAAY;MAAAS,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACrC,EAAA,CA1CQD,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AA4Cb,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}